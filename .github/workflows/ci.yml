name: CI
on: push
env:
  HTTPTOOLKIT_SERVER_DISABLE_AUTOUPDATE: 1 # Don't try to autoupdate during tests etc
jobs:
  build:
    name: Build & test
    runs-on: ubuntu-18.04
    container: httptoolkit/act-build-base
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: 14.17

      - name: Set up JDK 11 for Java testing
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm ci

      - name: Install test environment
        run: |
          apt-get update
          apt-get install p7zip-full xterm

          wget https://downloads.slack-edge.com/linux_releases/slack-desktop-4.12.2-amd64.deb
          apt install ./slack-desktop-4.12.2-amd64.deb

          cp test/no-sandbox-docker-wrapper.sh /usr/local/bin/google-chrome
          cp test/no-sandbox-docker-wrapper.sh /usr/local/bin/slack

          # Fix $HOME perms to make Firefox happy
          chown $(whoami) $HOME

      - run: npm run build
        env:
          SENTRY_AUTH_TOKEN: ${{ (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') && secrets.SENTRY_AUTH_TOKEN) || '' }}
          SENTRY_ORG: http-toolkit
          SENTRY_PROJECT: httptoolkit-server
          NPM_CONFIG_UNSAFE_PERM: true

      - run: xvfb-run npm run test
      - run: xvfb-run npm run test:release

      - uses: actions/upload-artifact@v2
        with:
          name: distributables
          path: build/dist/*
          if-no-files-found: error

      - uses: actions/upload-artifact@v2
        with:
          name: test-scripts
          path: test/distributables-test
          if-no-files-found: error

  test-distributables:
    needs: build
    strategy:
      matrix:
        include:
          - platform: Linux
            os: "ubuntu-20.04"
            test-script: "./unix.sh linux"
          - platform: Mac 10.15
            os: "macos-10.15"
            test-script: "./unix.sh darwin"
          - platform: Windows
            os: "windows-2019"
            test-script: ".\\windows.bat"
      fail-fast: false
    name: Test on ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Get our distributables
        uses: actions/download-artifact@v2
        with:
          name: distributables
          path: distributables

      - name: Get the test scripts
        uses: actions/download-artifact@v2
        with:
          name: test-scripts
          path: .

      - name: Make the test script executable
        if: matrix.platform != 'Windows'
        run: chmod +x unix.sh

      - name: Test the server build
        run: ${{ matrix.test-script }}

  publish:
    name: Publish a release
    runs-on: "ubuntu-18.04"
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    needs:
      - build
      - test-distributables
    steps:
      - name: Get our distributables
        uses: actions/download-artifact@v2
        with:
          name: distributables
          path: distributables

      - name: Upload server release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./distributables/*/*
          file_glob: true
          tag: ${{ github.ref }}

      - name: Upload latest manifest
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./distributables/latest-manifest/*
          file_glob: true
          tag: latest-manifest
          overwrite: true